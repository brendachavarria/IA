;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22/11/2021 12:27:59
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28CD      	GOTO       205
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x0819      	MOVF       ___DoICPAddr+1, 0
0x0005	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0006	0x0818      	MOVF       ___DoICPAddr, 0
0x0007	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0008	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0009	0x2003      	CALL       _____DoICP
0x000A	0x118A      	BCF        PCLATH, 3
0x000B	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x000C	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x000D	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x000E	0x0A98      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x000F	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0010	0x0A99      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0011	0x03C0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0012	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0013	0x2809      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0014	0x0008      	RETURN
; end of ___CC2DW
_Ciclo1:
;Mikro_SerieLed_84A.c,3 :: 		void Ciclo1(){
;Mikro_SerieLed_84A.c,4 :: 		if(ban2==1){
0x0015	0x3000      	MOVLW      0
0x0016	0x1283      	BCF        STATUS, 5
0x0017	0x0613      	XORWF      _ban2+1, 0
0x0018	0x1D03      	BTFSS      STATUS, 2
0x0019	0x281C      	GOTO       L__Ciclo120
0x001A	0x3001      	MOVLW      1
0x001B	0x0612      	XORWF      _ban2, 0
L__Ciclo120:
0x001C	0x1D03      	BTFSS      STATUS, 2
0x001D	0x2851      	GOTO       L_Ciclo10
;Mikro_SerieLed_84A.c,5 :: 		sal2=sal2+cont2;
0x001E	0x0816      	MOVF       _cont2, 0
0x001F	0x0714      	ADDWF      _sal2, 0
0x0020	0x00C1      	MOVWF      R1
0x0021	0x0815      	MOVF       _sal2+1, 0
0x0022	0x1803      	BTFSC      STATUS, 0
0x0023	0x3E01      	ADDLW      1
0x0024	0x0717      	ADDWF      _cont2+1, 0
0x0025	0x00C2      	MOVWF      R1+1
0x0026	0x0841      	MOVF       R1, 0
0x0027	0x0094      	MOVWF      _sal2
0x0028	0x0842      	MOVF       R1+1, 0
0x0029	0x0095      	MOVWF      _sal2+1
;Mikro_SerieLed_84A.c,6 :: 		cont2=cont2/2;
0x002A	0x0C97      	RRF        _cont2+1, 1
0x002B	0x0C96      	RRF        _cont2, 1
0x002C	0x1397      	BCF        _cont2+1, 7
0x002D	0x1B17      	BTFSC      _cont2+1, 6
0x002E	0x1797      	BSF        _cont2+1, 7
;Mikro_SerieLed_84A.c,7 :: 		if(sal2==255){
0x002F	0x3000      	MOVLW      0
0x0030	0x0642      	XORWF      R1+1, 0
0x0031	0x1D03      	BTFSS      STATUS, 2
0x0032	0x2835      	GOTO       L__Ciclo121
0x0033	0x30FF      	MOVLW      255
0x0034	0x0641      	XORWF      R1, 0
L__Ciclo121:
0x0035	0x1D03      	BTFSS      STATUS, 2
0x0036	0x2850      	GOTO       L_Ciclo11
;Mikro_SerieLed_84A.c,8 :: 		PORTB=sal2;
0x0037	0x0814      	MOVF       _sal2, 0
0x0038	0x0086      	MOVWF      PORTB
;Mikro_SerieLed_84A.c,9 :: 		delay_ms(200);
0x0039	0x3002      	MOVLW      2
0x003A	0x00CB      	MOVWF      R11
0x003B	0x3004      	MOVLW      4
0x003C	0x00CC      	MOVWF      R12
0x003D	0x30BA      	MOVLW      186
0x003E	0x00CD      	MOVWF      R13
L_Ciclo12:
0x003F	0x0BCD      	DECFSZ     R13, 1
0x0040	0x283F      	GOTO       L_Ciclo12
0x0041	0x0BCC      	DECFSZ     R12, 1
0x0042	0x283F      	GOTO       L_Ciclo12
0x0043	0x0BCB      	DECFSZ     R11, 1
0x0044	0x283F      	GOTO       L_Ciclo12
0x0045	0x0000      	NOP
;Mikro_SerieLed_84A.c,10 :: 		sal2=127;
0x0046	0x307F      	MOVLW      127
0x0047	0x0094      	MOVWF      _sal2
0x0048	0x3000      	MOVLW      0
0x0049	0x0095      	MOVWF      _sal2+1
;Mikro_SerieLed_84A.c,11 :: 		ban2=0;
0x004A	0x0192      	CLRF       _ban2
0x004B	0x0193      	CLRF       _ban2+1
;Mikro_SerieLed_84A.c,12 :: 		cont2=64;
0x004C	0x3040      	MOVLW      64
0x004D	0x0096      	MOVWF      _cont2
0x004E	0x3000      	MOVLW      0
0x004F	0x0097      	MOVWF      _cont2+1
;Mikro_SerieLed_84A.c,13 :: 		}
L_Ciclo11:
;Mikro_SerieLed_84A.c,14 :: 		}else{
0x0050	0x2878      	GOTO       L_Ciclo13
L_Ciclo10:
;Mikro_SerieLed_84A.c,15 :: 		sal2=sal2-cont2;
0x0051	0x0816      	MOVF       _cont2, 0
0x0052	0x0214      	SUBWF      _sal2, 0
0x0053	0x00C1      	MOVWF      R1
0x0054	0x0817      	MOVF       _cont2+1, 0
0x0055	0x1C03      	BTFSS      STATUS, 0
0x0056	0x3E01      	ADDLW      1
0x0057	0x0215      	SUBWF      _sal2+1, 0
0x0058	0x00C2      	MOVWF      R1+1
0x0059	0x0841      	MOVF       R1, 0
0x005A	0x0094      	MOVWF      _sal2
0x005B	0x0842      	MOVF       R1+1, 0
0x005C	0x0095      	MOVWF      _sal2+1
;Mikro_SerieLed_84A.c,16 :: 		cont2=cont2/2;
0x005D	0x0C97      	RRF        _cont2+1, 1
0x005E	0x0C96      	RRF        _cont2, 1
0x005F	0x1397      	BCF        _cont2+1, 7
0x0060	0x1B17      	BTFSC      _cont2+1, 6
0x0061	0x1797      	BSF        _cont2+1, 7
;Mikro_SerieLed_84A.c,17 :: 		if(sal2<=0){
0x0062	0x3080      	MOVLW      128
0x0063	0x00C0      	MOVWF      R0
0x0064	0x3080      	MOVLW      128
0x0065	0x0642      	XORWF      R1+1, 0
0x0066	0x0240      	SUBWF      R0, 0
0x0067	0x1D03      	BTFSS      STATUS, 2
0x0068	0x286B      	GOTO       L__Ciclo122
0x0069	0x0841      	MOVF       R1, 0
0x006A	0x3C00      	SUBLW      0
L__Ciclo122:
0x006B	0x1C03      	BTFSS      STATUS, 0
0x006C	0x2878      	GOTO       L_Ciclo14
;Mikro_SerieLed_84A.c,18 :: 		sal2=128;
0x006D	0x3080      	MOVLW      128
0x006E	0x0094      	MOVWF      _sal2
0x006F	0x0195      	CLRF       _sal2+1
;Mikro_SerieLed_84A.c,19 :: 		cont2=64;
0x0070	0x3040      	MOVLW      64
0x0071	0x0096      	MOVWF      _cont2
0x0072	0x3000      	MOVLW      0
0x0073	0x0097      	MOVWF      _cont2+1
;Mikro_SerieLed_84A.c,20 :: 		ban2=1;
0x0074	0x3001      	MOVLW      1
0x0075	0x0092      	MOVWF      _ban2
0x0076	0x3000      	MOVLW      0
0x0077	0x0093      	MOVWF      _ban2+1
;Mikro_SerieLed_84A.c,21 :: 		}
L_Ciclo14:
;Mikro_SerieLed_84A.c,22 :: 		}
L_Ciclo13:
;Mikro_SerieLed_84A.c,23 :: 		}
L_end_Ciclo1:
0x0078	0x0008      	RETURN
; end of _Ciclo1
_Ciclo2:
;Mikro_SerieLed_84A.c,25 :: 		void Ciclo2(){
;Mikro_SerieLed_84A.c,26 :: 		if(ban1==1){
0x0079	0x3000      	MOVLW      0
0x007A	0x1283      	BCF        STATUS, 5
0x007B	0x060D      	XORWF      _ban1+1, 0
0x007C	0x1D03      	BTFSS      STATUS, 2
0x007D	0x2880      	GOTO       L__Ciclo224
0x007E	0x3001      	MOVLW      1
0x007F	0x060C      	XORWF      _ban1, 0
L__Ciclo224:
0x0080	0x1D03      	BTFSS      STATUS, 2
0x0081	0x28A6      	GOTO       L_Ciclo25
;Mikro_SerieLed_84A.c,27 :: 		sal1=sal1+cont1;
0x0082	0x0810      	MOVF       _cont1, 0
0x0083	0x070E      	ADDWF      _sal1, 0
0x0084	0x00C1      	MOVWF      R1
0x0085	0x080F      	MOVF       _sal1+1, 0
0x0086	0x1803      	BTFSC      STATUS, 0
0x0087	0x3E01      	ADDLW      1
0x0088	0x0711      	ADDWF      _cont1+1, 0
0x0089	0x00C2      	MOVWF      R1+1
0x008A	0x0841      	MOVF       R1, 0
0x008B	0x008E      	MOVWF      _sal1
0x008C	0x0842      	MOVF       R1+1, 0
0x008D	0x008F      	MOVWF      _sal1+1
;Mikro_SerieLed_84A.c,28 :: 		cont1=cont1*2;
0x008E	0x0D90      	RLF        _cont1, 1
0x008F	0x0D91      	RLF        _cont1+1, 1
0x0090	0x1010      	BCF        _cont1, 0
;Mikro_SerieLed_84A.c,29 :: 		if(sal1>255){
0x0091	0x3080      	MOVLW      128
0x0092	0x00C0      	MOVWF      R0
0x0093	0x3080      	MOVLW      128
0x0094	0x0642      	XORWF      R1+1, 0
0x0095	0x0240      	SUBWF      R0, 0
0x0096	0x1D03      	BTFSS      STATUS, 2
0x0097	0x289A      	GOTO       L__Ciclo225
0x0098	0x0841      	MOVF       R1, 0
0x0099	0x3CFF      	SUBLW      255
L__Ciclo225:
0x009A	0x1803      	BTFSC      STATUS, 0
0x009B	0x28A5      	GOTO       L_Ciclo26
;Mikro_SerieLed_84A.c,30 :: 		sal1=254;
0x009C	0x30FE      	MOVLW      254
0x009D	0x008E      	MOVWF      _sal1
0x009E	0x018F      	CLRF       _sal1+1
;Mikro_SerieLed_84A.c,31 :: 		ban1=0;
0x009F	0x018C      	CLRF       _ban1
0x00A0	0x018D      	CLRF       _ban1+1
;Mikro_SerieLed_84A.c,32 :: 		cont1=2;
0x00A1	0x3002      	MOVLW      2
0x00A2	0x0090      	MOVWF      _cont1
0x00A3	0x3000      	MOVLW      0
0x00A4	0x0091      	MOVWF      _cont1+1
;Mikro_SerieLed_84A.c,33 :: 		}
L_Ciclo26:
;Mikro_SerieLed_84A.c,34 :: 		}else{
0x00A5	0x28CC      	GOTO       L_Ciclo27
L_Ciclo25:
;Mikro_SerieLed_84A.c,35 :: 		sal1=sal1-cont1;
0x00A6	0x0810      	MOVF       _cont1, 0
0x00A7	0x020E      	SUBWF      _sal1, 0
0x00A8	0x00C1      	MOVWF      R1
0x00A9	0x0811      	MOVF       _cont1+1, 0
0x00AA	0x1C03      	BTFSS      STATUS, 0
0x00AB	0x3E01      	ADDLW      1
0x00AC	0x020F      	SUBWF      _sal1+1, 0
0x00AD	0x00C2      	MOVWF      R1+1
0x00AE	0x0841      	MOVF       R1, 0
0x00AF	0x008E      	MOVWF      _sal1
0x00B0	0x0842      	MOVF       R1+1, 0
0x00B1	0x008F      	MOVWF      _sal1+1
;Mikro_SerieLed_84A.c,36 :: 		cont1=cont1*2;
0x00B2	0x0D90      	RLF        _cont1, 1
0x00B3	0x0D91      	RLF        _cont1+1, 1
0x00B4	0x1010      	BCF        _cont1, 0
;Mikro_SerieLed_84A.c,37 :: 		if(sal1<1){
0x00B5	0x3080      	MOVLW      128
0x00B6	0x0642      	XORWF      R1+1, 0
0x00B7	0x00C0      	MOVWF      R0
0x00B8	0x3080      	MOVLW      128
0x00B9	0x0240      	SUBWF      R0, 0
0x00BA	0x1D03      	BTFSS      STATUS, 2
0x00BB	0x28BE      	GOTO       L__Ciclo226
0x00BC	0x3001      	MOVLW      1
0x00BD	0x0241      	SUBWF      R1, 0
L__Ciclo226:
0x00BE	0x1803      	BTFSC      STATUS, 0
0x00BF	0x28CC      	GOTO       L_Ciclo28
;Mikro_SerieLed_84A.c,38 :: 		sal1=1;
0x00C0	0x3001      	MOVLW      1
0x00C1	0x008E      	MOVWF      _sal1
0x00C2	0x3000      	MOVLW      0
0x00C3	0x008F      	MOVWF      _sal1+1
;Mikro_SerieLed_84A.c,39 :: 		cont1=2;
0x00C4	0x3002      	MOVLW      2
0x00C5	0x0090      	MOVWF      _cont1
0x00C6	0x3000      	MOVLW      0
0x00C7	0x0091      	MOVWF      _cont1+1
;Mikro_SerieLed_84A.c,40 :: 		ban1=1;
0x00C8	0x3001      	MOVLW      1
0x00C9	0x008C      	MOVWF      _ban1
0x00CA	0x3000      	MOVLW      0
0x00CB	0x008D      	MOVWF      _ban1+1
;Mikro_SerieLed_84A.c,41 :: 		}
L_Ciclo28:
;Mikro_SerieLed_84A.c,42 :: 		}
L_Ciclo27:
;Mikro_SerieLed_84A.c,43 :: 		}
L_end_Ciclo2:
0x00CC	0x0008      	RETURN
; end of _Ciclo2
_main:
0x00CD	0x1283      	BCF        STATUS, 5
0x00CE	0x018C      	CLRF       _ban1
0x00CF	0x018D      	CLRF       13
0x00D0	0x018E      	CLRF       _sal1
0x00D1	0x018F      	CLRF       15
0x00D2	0x0190      	CLRF       _cont1
0x00D3	0x0191      	CLRF       17
0x00D4	0x0192      	CLRF       _ban2
0x00D5	0x0193      	CLRF       19
0x00D6	0x3080      	MOVLW      128
0x00D7	0x0094      	MOVWF      _sal2
0x00D8	0x0195      	CLRF       21
0x00D9	0x3040      	MOVLW      64
0x00DA	0x0096      	MOVWF      _cont2
0x00DB	0x0197      	CLRF       23
;Mikro_SerieLed_84A.c,45 :: 		void main() {
;Mikro_SerieLed_84A.c,46 :: 		short aux1=0;
0x00DC	0x019A      	CLRF       main_aux1_L0
;Mikro_SerieLed_84A.c,47 :: 		TRISA=0B00010000;
0x00DD	0x3010      	MOVLW      16
0x00DE	0x1683      	BSF        STATUS, 5
0x00DF	0x0085      	MOVWF      TRISA
;Mikro_SerieLed_84A.c,48 :: 		TRISB=0;
0x00E0	0x0186      	CLRF       TRISB
;Mikro_SerieLed_84A.c,49 :: 		do{
L_main9:
;Mikro_SerieLed_84A.c,50 :: 		if (PORTA.B4==1){
0x00E1	0x1283      	BCF        STATUS, 5
0x00E2	0x1E05      	BTFSS      PORTA, 4
0x00E3	0x28EF      	GOTO       L_main12
;Mikro_SerieLed_84A.c,51 :: 		aux1=~aux1;
0x00E4	0x099A      	COMF       main_aux1_L0, 1
;Mikro_SerieLed_84A.c,52 :: 		while (PORTA.B4==1)
L_main13:
0x00E5	0x1E05      	BTFSS      PORTA, 4
0x00E6	0x28EB      	GOTO       L_main14
;Mikro_SerieLed_84A.c,53 :: 		sal2=128;
0x00E7	0x3080      	MOVLW      128
0x00E8	0x0094      	MOVWF      _sal2
0x00E9	0x0195      	CLRF       _sal2+1
0x00EA	0x28E5      	GOTO       L_main13
L_main14:
;Mikro_SerieLed_84A.c,54 :: 		sal1=1;
0x00EB	0x3001      	MOVLW      1
0x00EC	0x008E      	MOVWF      _sal1
0x00ED	0x3000      	MOVLW      0
0x00EE	0x008F      	MOVWF      _sal1+1
;Mikro_SerieLed_84A.c,55 :: 		}
L_main12:
;Mikro_SerieLed_84A.c,56 :: 		if(aux1==0){
0x00EF	0x081A      	MOVF       main_aux1_L0, 0
0x00F0	0x3A00      	XORLW      0
0x00F1	0x1D03      	BTFSS      STATUS, 2
0x00F2	0x2904      	GOTO       L_main15
;Mikro_SerieLed_84A.c,57 :: 		PORTB=sal1;
0x00F3	0x080E      	MOVF       _sal1, 0
0x00F4	0x0086      	MOVWF      PORTB
;Mikro_SerieLed_84A.c,58 :: 		delay_ms(200);
0x00F5	0x3002      	MOVLW      2
0x00F6	0x00CB      	MOVWF      R11
0x00F7	0x3004      	MOVLW      4
0x00F8	0x00CC      	MOVWF      R12
0x00F9	0x30BA      	MOVLW      186
0x00FA	0x00CD      	MOVWF      R13
L_main16:
0x00FB	0x0BCD      	DECFSZ     R13, 1
0x00FC	0x28FB      	GOTO       L_main16
0x00FD	0x0BCC      	DECFSZ     R12, 1
0x00FE	0x28FB      	GOTO       L_main16
0x00FF	0x0BCB      	DECFSZ     R11, 1
0x0100	0x28FB      	GOTO       L_main16
0x0101	0x0000      	NOP
;Mikro_SerieLed_84A.c,59 :: 		Ciclo2();
0x0102	0x2079      	CALL       _Ciclo2
;Mikro_SerieLed_84A.c,60 :: 		}else{
0x0103	0x2914      	GOTO       L_main17
L_main15:
;Mikro_SerieLed_84A.c,61 :: 		PORTB=sal2;
0x0104	0x0814      	MOVF       _sal2, 0
0x0105	0x0086      	MOVWF      PORTB
;Mikro_SerieLed_84A.c,62 :: 		delay_ms(200);
0x0106	0x3002      	MOVLW      2
0x0107	0x00CB      	MOVWF      R11
0x0108	0x3004      	MOVLW      4
0x0109	0x00CC      	MOVWF      R12
0x010A	0x30BA      	MOVLW      186
0x010B	0x00CD      	MOVWF      R13
L_main18:
0x010C	0x0BCD      	DECFSZ     R13, 1
0x010D	0x290C      	GOTO       L_main18
0x010E	0x0BCC      	DECFSZ     R12, 1
0x010F	0x290C      	GOTO       L_main18
0x0110	0x0BCB      	DECFSZ     R11, 1
0x0111	0x290C      	GOTO       L_main18
0x0112	0x0000      	NOP
;Mikro_SerieLed_84A.c,63 :: 		Ciclo1();
0x0113	0x2015      	CALL       _Ciclo1
;Mikro_SerieLed_84A.c,64 :: 		}
L_main17:
;Mikro_SerieLed_84A.c,65 :: 		}while(1);
0x0114	0x28E1      	GOTO       L_main9
;Mikro_SerieLed_84A.c,66 :: 		}
L_end_main:
0x0115	0x2915      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [6]    _____DoICP
0x0009      [12]    ___CC2DW
0x0015     [100]    _Ciclo1
0x0079      [84]    _Ciclo2
0x00CD      [73]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000C       [2]    _ban1
0x000E       [2]    _sal1
0x0010       [2]    _cont1
0x0012       [2]    _ban2
0x0014       [2]    _sal2
0x0016       [2]    _cont2
0x0018       [2]    ___DoICPAddr
0x001A       [1]    main_aux1_L0
0x0040       [1]    R0
0x0041       [1]    R1
0x0042       [1]    R2
0x0043       [1]    R3
0x0044       [1]    R4
0x0045       [1]    R5
0x0046       [1]    R6
0x0047       [1]    R7
0x0048       [1]    R8
0x0049       [1]    R9
0x004A       [1]    R10
0x004B       [1]    R11
0x004C       [1]    R12
0x004D       [1]    R13
0x004E       [1]    R14
0x004F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
//** Label List: ** 
//----------------------------------------------
  L_Ciclo10
  L_Ciclo11
  L_Ciclo12
  L_Ciclo13
  L_Ciclo14
  L_Ciclo25
  L_Ciclo26
  L_Ciclo27
  L_Ciclo28
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_end_Ciclo1
  _Ciclo1
  L__Ciclo120
  L__Ciclo121
  L__Ciclo122
  L_end_Ciclo2
  _Ciclo2
  L__Ciclo224
  L__Ciclo225
  L__Ciclo226
  L_end_main
  _main
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
